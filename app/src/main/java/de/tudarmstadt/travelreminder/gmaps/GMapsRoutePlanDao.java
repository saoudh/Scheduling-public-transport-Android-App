package de.tudarmstadt.travelreminder.gmaps;

import android.arch.persistence.room.Dao;
import android.arch.persistence.room.Delete;
import android.arch.persistence.room.Insert;
import android.arch.persistence.room.Query;

import java.util.List;

import static android.arch.persistence.room.OnConflictStrategy.REPLACE;

/**
 * Data access object for the gmaps_route_plan table.
 * The implementation will be generated by googles persistence library Room.
 */
@Dao
public interface GMapsRoutePlanDao {
    /**
     * Returns all saved <code>{@link GMapsRoutePlanModel}</code>.
     * @return The current saved list of <code>{@link GMapsRoutePlanModel}</code>.
     */
    @Query("SELECT * FROM gmaps_route_plan ORDER BY arrivalTime ASC")
    List<GMapsRoutePlanModel> getAllRoutePlans();

    /**
     * Returns a certain <code>{@link GMapsRoutePlanModel}</code> identified by its id.
     * @param id The id of a saved <code>{@link GMapsRoutePlanModel}</code>.
     * @return The <code>{@link GMapsRoutePlanModel}</code> with the given id | Null if not saved.
     */
    @Query("SELECT * FROM gmaps_route_plan where id = :id")
    GMapsRoutePlanModel getRoutePlan(Long id);

    /**
     * Saves a <code>{@link GMapsRoutePlanModel}</code>. If the id is already used, it will be
     * replaced with the new <code>{@link GMapsRoutePlanModel}</code>.
     * @param plan The <code>{@link GMapsRoutePlanModel}</code> to save.
     * @return The ID of the saved <code>{@link GMapsRoutePlanModel}</code>.
     */
    @Insert(onConflict = REPLACE)
    Long addRoutePlan(GMapsRoutePlanModel plan);

    /**
     * Deletes a list of <code>{@link GMapsRoutePlanModel}</code>.
     * @param plan The list of <code>{@link GMapsRoutePlanModel}</code> to delete.
     */
    @Delete
    void deleteRoutePlan(GMapsRoutePlanModel... plan);
}
